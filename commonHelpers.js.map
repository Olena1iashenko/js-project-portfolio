{"version":3,"file":"commonHelpers.js","sources":["../src/img/icons.svg#icon-x","../src/js/work-together.js"],"sourcesContent":["export default \"__VITE_ASSET__34116e74__$_#icon-x__\"","\n// import axios from 'axios';\n// import iziToast from 'izitoast';\n// import errorIcon from '../img/icons.svg#icon-x';\n\n// //refs\n// const formData = document.querySelector('.footer-form');\n// const emailInput = document.querySelector('#user-email');\n// const emailMessage = document.querySelector('#email-message');\n// const commentInput = document.querySelector('#user-comment');\n// const commentMessage = document.querySelector('#comment-message');\n// const backdrop = document.querySelector('.backdrop');\n// const modalWindow = document.querySelector('.modal');\n// const closeModalBtn = document.querySelector('.modal-btn');\n// const clickSubmitBtn = document.querySelector('.footer-btn');\n\n\n// function validateEmail(email) {\n//   const pattern = emailInput.getAttribute('pattern');\n//   const validRegex = new RegExp(pattern);\n//   return validRegex.test(email);\n// }\n\n// function validateComment(comment) {\n//   return comment.length >= 10;\n// }\n\n\n// function showMessage(icon, message, bgColor) {\n//   iziToast.show({\n//     iconUrl: icon,\n//     titleColor: 'White',\n//     titleSize: '24px',\n//     message: message,\n//     messageColor: 'White',\n//     messageSize: '16px',\n//     backgroundColor: bgColor,\n//     position: 'topRight',\n//     timeout: 3000,\n//   });\n// }\n\n// // Axios async function\n// axios.defaults.baseURL = 'https://portfolio-js.b.goit.study/api';\n\n// async function userForm(userData) {\n//   const body = {\n//     email: userData.email,\n//     comment: userData.comment\n//   };\n//   const ENDPOINT = '/requests';\n\n//   return axios.post(ENDPOINT, body);\n// }\n\n\n// function handleSuccess(input, message) {\n//   input.classList.add('input-correct');\n//   message.classList.remove('input-error');\n//   message.classList.add('input-success');\n//   message.textContent = 'Success!';\n//    input.parentNode.insertBefore(message, input.nextSibling);\n// }\n\n\n// function handleFailure(input, message) {\n//   input.classList.add('input-incorrect');\n//   message.classList.remove('input-success');\n//   message.classList.add('input-error');\n//   message.textContent = 'Please, try again!';\n//    input.parentNode.insertBefore(message, input.nextSibling);\n// }\n\n\n// function afterFillSuccess(input, message) {\n//   input.classList.remove('input-incorrect', 'input-correct');\n//   message.classList.remove('input-error', 'input-success');\n// }\n\n// function afterFillFailure(input, message) {\n//   input.classList.remove('input-incorrect', 'input-correct');\n//   message.classList.remove('input-error', 'input-success');\n// }\n\n\n// function handleCloseModal() {\n//   document.body.classList.remove('backdrop-after');\n//   backdrop.classList.remove('backdrop-is-open');\n//   modalWindow.classList.remove('modal-is-open');\n// }\n\n\n// function handleOpenModal() {\n//   document.body.classList.add('backdrop-after');\n//   backdrop.classList.add('backdrop-is-open');\n//   modalWindow.classList.add('modal-is-open');\n// }\n\n\n// function closeModal(event) {\n//   if (\n//     event.target.classList.contains('backdrop') ||\n//     event.target.nodeName === 'svg' ||\n//     event.target.nodeName === 'BUTTON'\n//   ) {\n//     handleCloseModal();\n//     closeModalBtn.removeEventListener('click', closeModal);\n//   }\n// }\n\n\n// function onEscClose(event) {\n//   if (event.key === 'Escape') {\n//     handleCloseModal();\n//     document.removeEventListener('keydown', onEscClose);\n//   }\n// }\n\n\n// function onSubmitButton() {\n//   const email = emailInput.value.trim();\n// const comment = commentInput.value.trim();\n//   if (!validateEmail(email)) {\n//     handleFailure(emailInput, emailMessage);\n//   }\n//    if (!validateComment(comment)) {\n//     handleFailure(commentInput, commentMessage);\n//   }\n// }\n\n// async function onSubmit(event) {\n//   event.preventDefault();\n\n//   try {\n//     const email = emailInput.value.trim();\n//     const comment = commentInput.value.trim();\n\n//     if (email === '' || comment === '') {\n//       showMessage(errorIcon, 'Both fields are required. Please provide your email and comment before sending.', '#e74a3b');\n//       return;\n//     }\n\n//     if (!validateEmail(email)) {\n//       throw new Error('Invalid email format');\n//     }\n\n//     if (!validateComment(comment)) {\n//       throw new Error('Comment must be at least 10 characters long');\n//     }\n\n    \n//     const response = await userForm({ email, comment });\n//     formData.reset();\n\n    \n//     handleOpenModal();\n\n    \n//     document.body.addEventListener('click', closeModal);\n//     window.addEventListener('keydown', onEscClose);\n//   } catch (error) {\n   \n//     showMessage(errorIcon, error.message, '#e74a3b');\n//   }\n// }\n\n\n// function handleInputCheck() {\n//   const email = emailInput.value.trim();\n\n//   if (email === '') {\n//     return;\n//   }\n\n//   if (validateEmail(email)) {\n//     handleSuccess(emailInput, emailMessage);\n//     setTimeout(() => afterFillSuccess(emailMessage), 2000);\n//   } else {\n//     handleFailure(emailInput, emailMessage);\n//     setTimeout(() => afterFillFailure(emailMessage), 2000);\n//   }\n// }\n\n\n// formData.addEventListener('submit', onSubmit);\n// clickSubmitBtn.addEventListener('click', onSubmitButton);\n// emailInput.addEventListener('input', handleInputCheck);\n// commentInput.addEventListener('input', handleInputCheck);\nimport axios from 'axios';\nimport iziToast from 'izitoast';\nimport errorIcon from '../img/icons.svg#icon-x';\n\n// Refs\n\nconst formData = document.querySelector('.footer-form');\nconst emailInput = document.querySelector('#user-email');\nconst emailMessage = document.querySelector('#email-message');\nconst commentInput = document.querySelector('#user-comment');\nconst commentMessage = document.querySelector('#comment-message');\nconst backdrop = document.querySelector('.backdrop');\nconst modalWindow = document.querySelector('.modal');\nconst closeModalBtn = document.querySelector('.modal-btn');\nconst clickSubmitBtn = document.querySelector('.footer-btn');\n\nfunction validateEmail(email) {\n  const pattern = emailInput.getAttribute('pattern');\n  const validRegex = new RegExp(pattern);\n  return validRegex.test(email);\n}\n\n\nfunction validateComment(comment) {\n  return comment.length >= 10;\n}\n\n// Izitoast\nfunction showMessage(icon, message, bgColor) {\n  iziToast.show({\n    iconUrl: icon,\n    titleColor: 'White',\n    titleSize: '24px',\n    message: message,\n    messageColor: 'White',\n    messageSize: '16px',\n    backgroundColor: bgColor,\n    position: 'topRight',\n    timeout: 3000,\n  });\n}\n\n// Axios async function\naxios.defaults.baseURL = 'https://portfolio-js.b.goit.study/api';\n\nasync function userForm(userData) {\n  const body = {\n    email: userData.email,\n    comment: userData.comment\n  };\n  const ENDPOINT = '/requests';\n\n  return axios.post(ENDPOINT, body);\n}\n\n\nfunction handleSuccess(input, message) {\n  input.classList.add('input-correct');\n  message.classList.remove('input-error');\n  message.classList.add('input-success');\n  message.textContent = 'Success!';\n  message.style.display = 'block';\n}\n\n\nfunction handleFailure(input, message) {\n  input.classList.add('input-incorrect');\n  message.classList.remove('input-success');\n  message.classList.add('input-error');\n  message.textContent = 'Please, try again!';\n  message.style.display = 'block';\n}\n\nfunction afterFillSuccess(input, message) {\n  input.classList.remove('input-incorrect', 'input-correct');\n  message.classList.remove('input-error', 'input-success');\n  message.style.display = 'none'; \n}\n\nfunction afterFillFailure(input, message) {\n  input.classList.remove('input-incorrect', 'input-correct');\n  message.classList.remove('input-error', 'input-success');\n  message.style.display = 'none'; \n}\n\nfunction handleCloseModal() {\n  document.body.classList.remove('backdrop-after');\n  backdrop.classList.remove('backdrop-is-open');\n  modalWindow.classList.remove('modal-is-open');\n}\n\n\nfunction handleOpenModal() {\n  document.body.classList.add('backdrop-after');\n  backdrop.classList.add('backdrop-is-open');\n  modalWindow.classList.add('modal-is-open');\n}\n\n\nfunction closeModal(event) {\n  if (\n    event.target.classList.contains('backdrop') ||\n    event.target.nodeName === 'svg' ||\n    event.target.nodeName === 'BUTTON'\n  ) {\n    handleCloseModal();\n    closeModalBtn.removeEventListener('click', closeModal);\n  }\n}\n\nfunction onEscClose(event) {\n  if (event.key === 'Escape') {\n    handleCloseModal();\n    document.removeEventListener('keydown', onEscClose);\n  }\n}\n\n\nfunction onSubmitButton() {\n  const email = emailInput.value.trim();\n  const comment = commentInput.value.trim();\n\n  if (!validateEmail(email)) {\n    handleFailure(emailInput, emailMessage);\n  }\n\n  if (!validateComment(comment)) {\n    handleFailure(commentInput, commentMessage);\n  }\n}\n\n\nasync function onSubmit(event) {\n  event.preventDefault();\n\n  try {\n    const email = emailInput.value.trim();\n    const comment = commentInput.value.trim();\n\n    if (email === '' || comment === '') {\n      showMessage(errorIcon, 'Both fields are required. Please provide your email and comment before sending.', '#e74a3b');\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      throw new Error('Invalid email format');\n    }\n\n    if (!validateComment(comment)) {\n      throw new Error('Comment must be at least 10 characters long');\n    }\n\n    //  Axios\n    const response = await userForm({ email, comment });\n    formData.reset();\n\n   \n    handleOpenModal();\n\n\n    document.body.addEventListener('click', closeModal);\n    window.addEventListener('keydown', onEscClose);\n  } catch (error) {\n  \n    showMessage(errorIcon, error.message, '#e74a3b');\n  }\n}\n\n\n// function handleInputCheck() {\n//   const email = emailInput.value.trim();\n//   const comment = commentInput.value.trim();\n\n//   if (email === '' || comment === '') {\n//     return;\n//   }\n\n//   if (validateEmail(email)) {\n//     handleSuccess(emailInput, emailMessage);\n//     setTimeout(() => afterFillSuccess(emailMessage), 2000);\n//   } else {\n//     handleFailure(emailInput, emailMessage);\n//     setTimeout(() => afterFillFailure(emailMessage), 2000);\n//   }\n\n//   if (validateComment(comment)) {\n//     handleSuccess(commentInput, commentMessage);\n//     setTimeout(() => afterFillSuccess(commentMessage), 2000);\n//   } else {\n//     handleFailure(commentInput, commentMessage);\n//     setTimeout(() => afterFillFailure(commentMessage), 2000);\n//   }\n// }\nfunction handleInputCheck() {\n  const email = emailInput.value.trim();\n  const comment = commentInput.value.trim();\n\n  if (email === '' || comment === '') {\n    return;\n  }\n\n  if (validateEmail(email)) {\n    handleSuccess(emailInput, emailMessage);\n    setTimeout(() => afterFillSuccess(emailInput, emailMessage), 2000);\n  } else {\n    handleFailure(emailInput, emailMessage);\n    setTimeout(() => afterFillFailure(emailInput, emailMessage), 2000);\n  }\n\n  if (validateComment(comment)) {\n    handleSuccess(commentInput, commentMessage);\n    setTimeout(() => afterFillSuccess(commentInput, commentMessage), 2000);\n  } else {\n    handleFailure(commentInput, commentMessage);\n    setTimeout(() => afterFillFailure(commentInput, commentMessage), 2000);\n  }\n}\n\nformData.addEventListener('submit', onSubmit);\nclickSubmitBtn.addEventListener('click', onSubmitButton);\nemailInput.addEventListener('input', handleInputCheck);\ncommentInput.addEventListener('input', handleInputCheck);\n"],"names":["errorIcon","formData","emailInput","emailMessage","commentInput","commentMessage","backdrop","modalWindow","closeModalBtn","clickSubmitBtn","validateEmail","email","pattern","validateComment","comment","showMessage","icon","message","bgColor","iziToast","axios","userForm","userData","body","ENDPOINT","handleSuccess","input","handleFailure","afterFillSuccess","afterFillFailure","handleCloseModal","handleOpenModal","closeModal","event","onEscClose","onSubmitButton","onSubmit","response","error","handleInputCheck"],"mappings":"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"}